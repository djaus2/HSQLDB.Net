/*
 * Copyright (c) 1999-2018 by Codemesh, Inc.
 * ALL RIGHTS RESERVED.
 *
 * Original Java Type: javax.sql.ConnectionEventListener
 * JRE Version       : 1.8.0_74
 * Template Version  : 1.0.42
 * Codegen Version   : 4.7.416
 * Generated at      : Sat Sep 29 22:36:16 EDT 2018
 */


namespace Javax.Sql
{
    [global::System.Runtime.InteropServices.GuidAttribute("F16E1B58-D854-2795-E274-EEACF589631A")]
    [global::Codemesh.JuggerNET.JuggerNETProxyType(IsLeafType=false, CodegenVersion="4.7.416", JavaName="javax.sql.ConnectionEventListener")]
    public interface ConnectionEventListener :
        global::Java.Util.EventListener
    { 
        void ConnectionClosed(global::Javax.Sql.ConnectionEvent event_);
    
    
        void ConnectionErrorOccurred(global::Javax.Sql.ConnectionEvent event_);
    }
    
    
    [global::Codemesh.JuggerNET.JuggerNETProxyType(IsLeafType=true, CodegenVersion="4.7.416", JavaName="javax.sql.ConnectionEventListener")]
    public class ConnectionEventListenerImpl :
        global::Java.Util.EventListenerImpl,
        global::Javax.Sql.ConnectionEventListener
    {
        private static readonly global::Codemesh.JuggerNET.JavaClass    _cmj_theClass;
        private static readonly global::Codemesh.JuggerNET.JavaMethod   _cmj_fun0;
        private static readonly global::Codemesh.JuggerNET.JavaMethod   _cmj_fun1;
    
        static ConnectionEventListenerImpl()
        {
            _cmj_theClass = global::Codemesh.JuggerNET.JavaClass.RegisterClass("javax.sql.ConnectionEventListener", typeof(global::Javax.Sql.ConnectionEventListener), typeof(global::Javax.Sql.ConnectionEventListenerImpl), typeof(global::Javax.Sql.ConnectionEventListenerCB));
            _cmj_fun0 = new global::Codemesh.JuggerNET.JavaMethod( _cmj_theClass, typeof(void), "connectionClosed", "(Ljavax/sql/ConnectionEvent;)V", false, false, false );
            _cmj_fun1 = new global::Codemesh.JuggerNET.JavaMethod( _cmj_theClass, typeof(void), "connectionErrorOccurred", "(Ljavax/sql/ConnectionEvent;)V", false, false, false );
        }
    
    
    
        /// <summary>Creates a .NET proxy instance from an existing JNI object handle.
        /// <para>You should never have to use this constructor explicitly. It is a
        /// constructor that is required by the JuggerNET framework.</para></summary>
        /// <param name="jobj"> The JNI object handle.</param>
        public ConnectionEventListenerImpl( global::Codemesh.JuggerNET.JNIHandle jobj ) : base( jobj ) {	}
    
    
        /// <summary>Returns an instance of type ConnectionEventListenerImpl if the given proxy instance
        /// represents a Java object that is type-compatible with javax.sql.ConnectionEventListener</summary>
        /// <param name="proxy">A proxy object of any type.</param>
        public static new global::Javax.Sql.ConnectionEventListenerImpl From( object proxy )
        {
            global::Codemesh.JuggerNET.JavaProxy   jp = proxy as global::Codemesh.JuggerNET.JavaProxy;
            if (_cmj_theClass.IsTypeOf(jp))
                return new global::Javax.Sql.ConnectionEventListenerImpl(new global::Codemesh.JuggerNET.JNIHandle(jp.JObjectDuplicate));
            else
                return null;
        }
        
        public void ConnectionClosed(global::Javax.Sql.ConnectionEvent event_)
        {
            global::Codemesh.JuggerNET.jvalue[]   cmj_jargs = new global::Codemesh.JuggerNET.jvalue[ 1 ];
            using( global::Codemesh.JuggerNET.JavaMethodArguments cmj_jmargs = new global::Codemesh.JuggerNET.JavaMethodArguments( cmj_jargs ).Add(event_) )
            {
                _cmj_fun0.CallVoid( this, cmj_jmargs );
            }
        }        
        
        public void ConnectionErrorOccurred(global::Javax.Sql.ConnectionEvent event_)
        {
            global::Codemesh.JuggerNET.jvalue[]   cmj_jargs = new global::Codemesh.JuggerNET.jvalue[ 1 ];
            using( global::Codemesh.JuggerNET.JavaMethodArguments cmj_jmargs = new global::Codemesh.JuggerNET.JavaMethodArguments( cmj_jargs ).Add(event_) )
            {
                _cmj_fun1.CallVoid( this, cmj_jmargs );
            }
        }        
    }
    
    // ******************* CALLBACK TYPE IMPLEMENTATION ********************
    [global::Codemesh.JuggerNET.JuggerNETProxyType(IsLeafType=true, CodegenVersion="4.7.416")]
    public class ConnectionEventListenerCB : global::Codemesh.JuggerNET.JuggerNETProxyObject
    {
        private static readonly global::Codemesh.JuggerNET.JavaClass    _cmj_theClass;
        private static readonly global::Codemesh.JuggerNET.JavaMethod                    _cmj_ctor;
        private global::Javax.Sql.ConnectionEventListener                                theTarget;
        private global::Codemesh.JuggerNET.GenericCallback                               _cmj_cb0;
        private global::Codemesh.JuggerNET.GenericCallback                               _cmj_cb1;
    
        private static readonly byte[]                                                   _cmj_byteCode = {
            202, 254, 186, 190, 0, 0, 0, 52, 0, 162, 10, 0, 36, 0, 83, 9, 0, 43,
            0, 84, 9, 0, 43, 0, 85, 9, 0, 43, 0, 86, 9, 0, 43, 0, 87, 9, 0, 43,
            0, 88, 10, 0, 22, 0, 89, 10, 0, 22, 0, 90, 7, 0, 91, 7, 0, 92, 10, 0,
            10, 0, 83, 8, 0, 93, 10, 0, 10, 0, 94, 10, 0, 10, 0, 95, 10, 0, 10,
            0, 96, 10, 0, 9, 0, 97, 10, 0, 98, 0, 99, 10, 0, 98, 0, 100, 10, 0,
            36, 0, 101, 10, 0, 31, 0, 102, 10, 0, 98, 0, 103, 7, 0, 104, 10, 0,
            22, 0, 83, 8, 0, 105, 10, 0, 106, 0, 107, 8, 0, 108, 10, 0, 43, 0,
            109, 10, 0, 22, 0, 110, 9, 0, 22, 0, 111, 9, 0, 22, 0, 112, 7, 0,
            113, 7, 0, 114, 7, 0, 115, 10, 0, 31, 0, 116, 10, 0, 43, 0, 117, 7,
            0, 118, 8, 0, 119, 10, 0, 120, 0, 121, 7, 0, 122, 7, 0, 123, 7, 0,
            124, 7, 0, 125, 7, 0, 126, 7, 0, 127, 1, 0, 10, 95, 120, 109, 111,
            103, 95, 105, 110, 115, 116, 1, 0, 1, 74, 1, 0, 16, 95, 120, 109,
            111, 103, 95, 99, 98, 95, 100, 105, 115, 112, 111, 115, 101, 1, 0,
            13, 95, 120, 109, 111, 103, 95, 101, 110, 97, 98, 108, 101, 100, 1,
            0, 1, 90, 1, 0, 18, 95, 120, 109, 111, 103, 95, 115, 121, 110, 99,
            104, 114, 111, 110, 105, 122, 101, 100, 1, 0, 9, 95, 120, 109, 111,
            103, 95, 99, 98, 115, 1, 0, 2, 91, 74, 1, 0, 6, 60, 105, 110, 105,
            116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100, 101, 1, 0, 15,
            76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101,
            1, 0, 6, 40, 74, 91, 74, 41, 86, 1, 0, 7, 40, 74, 91, 74, 90, 41, 86,
            1, 0, 12, 120, 109, 111, 103, 95, 100, 105, 115, 97, 98, 108, 101, 1,
            0, 15, 120, 109, 111, 103, 95, 103, 101, 116, 95, 110, 97, 116, 105,
            118, 101, 1, 0, 3, 40, 41, 74, 1, 0, 19, 120, 109, 111, 103, 95, 100,
            105, 115, 112, 111, 115, 101, 95, 110, 97, 116, 105, 118, 101, 1, 0,
            13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97, 98, 108, 101, 1, 0,
            13, 120, 109, 111, 103, 95, 99, 98, 95, 116, 114, 97, 99, 101, 1, 0,
            21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116,
            114, 105, 110, 103, 59, 41, 86, 1, 0, 13, 120, 109, 111, 103, 95,
            116, 104, 114, 111, 119, 82, 84, 69, 1, 0, 21, 40, 76, 106, 97, 118,
            97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 86,
            1, 0, 16, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 67, 108,
            111, 115, 101, 100, 1, 0, 30, 40, 76, 106, 97, 118, 97, 120, 47, 115,
            113, 108, 47, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 69,
            118, 101, 110, 116, 59, 41, 86, 7, 0, 118, 7, 0, 104, 7, 0, 126, 7,
            0, 128, 7, 0, 115, 7, 0, 129, 7, 0, 122, 7, 0, 123, 7, 0, 124, 7, 0,
            125, 1, 0, 23, 99, 111, 110, 110, 101, 99, 116, 105, 111, 110, 69,
            114, 114, 111, 114, 79, 99, 99, 117, 114, 114, 101, 100, 1, 0, 10,
            83, 111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 38, 106, 97,
            118, 97, 120, 95, 115, 113, 108, 95, 67, 111, 110, 110, 101, 99, 116,
            105, 111, 110, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101, 110,
            101, 114, 46, 106, 97, 118, 97, 12, 0, 53, 0, 54, 12, 0, 45, 0, 46,
            12, 0, 47, 0, 46, 12, 0, 48, 0, 49, 12, 0, 50, 0, 49, 12, 0, 51, 0,
            52, 12, 0, 130, 0, 131, 12, 0, 132, 0, 133, 1, 0, 26, 106, 97, 118,
            97, 47, 108, 97, 110, 103, 47, 82, 117, 110, 116, 105, 109, 101, 69,
            120, 99, 101, 112, 116, 105, 111, 110, 1, 0, 23, 106, 97, 118, 97,
            47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 66, 117, 105,
            108, 100, 101, 114, 1, 0, 128, 65, 32, 74, 97, 118, 97, 32, 101, 120,
            99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 97, 32, 116, 121,
            112, 101, 32, 110, 111, 116, 32, 97, 108, 108, 111, 119, 101, 100,
            32, 98, 121, 32, 116, 104, 105, 115, 32, 109, 101, 116, 104, 111,
            100, 32, 119, 97, 115, 32, 116, 104, 114, 111, 119, 110, 32, 111,
            110, 32, 116, 104, 101, 32, 110, 97, 116, 105, 118, 101, 32, 115,
            105, 100, 101, 32, 97, 110, 100, 32, 104, 97, 115, 32, 98, 101, 101,
            110, 32, 119, 114, 97, 112, 112, 101, 100, 32, 105, 110, 32, 97, 32,
            82, 117, 110, 116, 105, 109, 101, 69, 120, 99, 101, 112, 116, 105,
            111, 110, 92, 110, 12, 0, 134, 0, 135, 12, 0, 134, 0, 136, 12, 0,
            137, 0, 138, 12, 0, 53, 0, 65, 7, 0, 139, 12, 0, 140, 0, 141, 12, 0,
            142, 0, 143, 12, 0, 144, 0, 145, 12, 0, 146, 0, 143, 12, 0, 147, 0,
            148, 1, 0, 23, 99, 111, 109, 47, 99, 111, 100, 101, 109, 101, 115,
            104, 47, 112, 101, 101, 114, 47, 86, 97, 108, 117, 101, 1, 0, 36, 97,
            98, 111, 117, 116, 32, 116, 111, 32, 99, 97, 108, 108, 32, 110, 97,
            116, 105, 118, 101, 32, 99, 111, 100, 101, 32, 119, 105, 116, 104,
            32, 105, 110, 115, 116, 61, 7, 0, 149, 12, 0, 150, 0, 151, 1, 0, 11,
            44, 32, 95, 120, 109, 111, 103, 95, 99, 98, 61, 12, 0, 64, 0, 65, 12,
            0, 152, 0, 153, 12, 0, 154, 0, 155, 12, 0, 156, 0, 157, 1, 0, 15,
            106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115,
            1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114,
            105, 110, 103, 1, 0, 19, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,
            84, 104, 114, 111, 119, 97, 98, 108, 101, 12, 0, 158, 0, 159, 12, 0,
            66, 0, 67, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79,
            98, 106, 101, 99, 116, 1, 0, 126, 65, 32, 74, 97, 118, 97, 32, 101,
            120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 97, 32, 116,
            121, 112, 101, 32, 110, 111, 116, 32, 97, 108, 108, 111, 119, 101,
            100, 32, 98, 121, 32, 116, 104, 105, 115, 32, 109, 101, 116, 104,
            111, 100, 32, 119, 97, 115, 32, 116, 104, 114, 111, 119, 110, 32,
            111, 110, 32, 116, 104, 101, 32, 110, 97, 116, 105, 118, 101, 32,
            115, 105, 100, 101, 32, 97, 110, 100, 32, 104, 97, 115, 32, 98, 101,
            101, 110, 32, 119, 114, 97, 112, 112, 101, 100, 32, 105, 110, 32, 97,
            32, 82, 117, 110, 116, 105, 109, 101, 69, 120, 99, 101, 112, 116,
            105, 111, 110, 7, 0, 129, 12, 0, 160, 0, 161, 1, 0, 32, 106, 97, 118,
            97, 47, 108, 97, 110, 103, 47, 73, 110, 115, 116, 97, 110, 116, 105,
            97, 116, 105, 111, 110, 69, 120, 99, 101, 112, 116, 105, 111, 110, 1,
            0, 43, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 114, 101, 102,
            108, 101, 99, 116, 47, 73, 110, 118, 111, 99, 97, 116, 105, 111, 110,
            84, 97, 114, 103, 101, 116, 69, 120, 99, 101, 112, 116, 105, 111,
            110, 1, 0, 32, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 73, 108,
            108, 101, 103, 97, 108, 65, 99, 99, 101, 115, 115, 69, 120, 99, 101,
            112, 116, 105, 111, 110, 1, 0, 27, 106, 97, 118, 97, 47, 108, 97,
            110, 103, 47, 83, 101, 99, 117, 114, 105, 116, 121, 69, 120, 99, 101,
            112, 116, 105, 111, 110, 1, 0, 61, 99, 111, 109, 47, 99, 111, 100,
            101, 109, 101, 115, 104, 47, 110, 97, 116, 105, 118, 101, 97, 100,
            97, 112, 116, 101, 114, 115, 47, 106, 97, 118, 97, 120, 95, 115, 113,
            108, 95, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 69, 118,
            101, 110, 116, 76, 105, 115, 116, 101, 110, 101, 114, 1, 0, 33, 106,
            97, 118, 97, 120, 47, 115, 113, 108, 47, 67, 111, 110, 110, 101, 99,
            116, 105, 111, 110, 69, 118, 101, 110, 116, 76, 105, 115, 116, 101,
            110, 101, 114, 1, 0, 25, 106, 97, 118, 97, 120, 47, 115, 113, 108,
            47, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 69, 118, 101,
            110, 116, 1, 0, 29, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 114,
            101, 102, 108, 101, 99, 116, 47, 67, 111, 110, 115, 116, 114, 117,
            99, 116, 111, 114, 1, 0, 8, 99, 97, 108, 108, 98, 97, 99, 107, 1, 0,
            74, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106,
            101, 99, 116, 59, 74, 74, 76, 99, 111, 109, 47, 99, 111, 100, 101,
            109, 101, 115, 104, 47, 112, 101, 101, 114, 47, 86, 97, 108, 117,
            101, 59, 91, 76, 99, 111, 109, 47, 99, 111, 100, 101, 109, 101, 115,
            104, 47, 112, 101, 101, 114, 47, 86, 97, 108, 117, 101, 59, 41, 73,
            1, 0, 5, 116, 114, 97, 99, 101, 1, 0, 23, 40, 73, 73, 76, 106, 97,
            118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59,
            41, 73, 1, 0, 6, 97, 112, 112, 101, 110, 100, 1, 0, 45, 40, 76, 106,
            97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103,
            59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116,
            114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114, 59, 1, 0, 45,
            40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106,
            101, 99, 116, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103,
            47, 83, 116, 114, 105, 110, 103, 66, 117, 105, 108, 100, 101, 114,
            59, 1, 0, 8, 116, 111, 83, 116, 114, 105, 110, 103, 1, 0, 20, 40, 41,
            76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105,
            110, 103, 59, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,
            84, 104, 114, 101, 97, 100, 1, 0, 13, 99, 117, 114, 114, 101, 110,
            116, 84, 104, 114, 101, 97, 100, 1, 0, 20, 40, 41, 76, 106, 97, 118,
            97, 47, 108, 97, 110, 103, 47, 84, 104, 114, 101, 97, 100, 59, 1, 0,
            21, 103, 101, 116, 67, 111, 110, 116, 101, 120, 116, 67, 108, 97,
            115, 115, 76, 111, 97, 100, 101, 114, 1, 0, 25, 40, 41, 76, 106, 97,
            118, 97, 47, 108, 97, 110, 103, 47, 67, 108, 97, 115, 115, 76, 111,
            97, 100, 101, 114, 59, 1, 0, 8, 103, 101, 116, 67, 108, 97, 115, 115,
            1, 0, 19, 40, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,
            67, 108, 97, 115, 115, 59, 1, 0, 14, 103, 101, 116, 67, 108, 97, 115,
            115, 76, 111, 97, 100, 101, 114, 1, 0, 21, 115, 101, 116, 67, 111,
            110, 116, 101, 120, 116, 67, 108, 97, 115, 115, 76, 111, 97, 100,
            101, 114, 1, 0, 26, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103,
            47, 67, 108, 97, 115, 115, 76, 111, 97, 100, 101, 114, 59, 41, 86, 1,
            0, 14, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 76, 111, 110,
            103, 1, 0, 11, 116, 111, 72, 101, 120, 83, 116, 114, 105, 110, 103,
            1, 0, 21, 40, 74, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103,
            47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 12, 99, 97, 108, 108, 98,
            97, 99, 107, 95, 111, 112, 116, 1, 0, 66, 40, 76, 106, 97, 118, 97,
            47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 74, 74, 76,
            99, 111, 109, 47, 99, 111, 100, 101, 109, 101, 115, 104, 47, 112,
            101, 101, 114, 47, 86, 97, 108, 117, 101, 59, 76, 106, 97, 118, 97,
            47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 73, 1,
            0, 4, 116, 121, 112, 101, 1, 0, 1, 73, 1, 0, 1, 108, 1, 0, 18, 76,
            106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,
            116, 59, 1, 0, 14, 103, 101, 116, 67, 111, 110, 115, 116, 114, 117,
            99, 116, 111, 114, 1, 0, 51, 40, 91, 76, 106, 97, 118, 97, 47, 108,
            97, 110, 103, 47, 67, 108, 97, 115, 115, 59, 41, 76, 106, 97, 118,
            97, 47, 108, 97, 110, 103, 47, 114, 101, 102, 108, 101, 99, 116, 47,
            67, 111, 110, 115, 116, 114, 117, 99, 116, 111, 114, 59, 1, 0, 11,
            110, 101, 119, 73, 110, 115, 116, 97, 110, 99, 101, 1, 0, 39, 40, 91,
            76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101,
            99, 116, 59, 41, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79,
            98, 106, 101, 99, 116, 59, 0, 33, 0, 43, 0, 36, 0, 1, 0, 44, 0, 5, 0,
            2, 0, 45, 0, 46, 0, 0, 0, 2, 0, 47, 0, 46, 0, 0, 0, 2, 0, 48, 0, 49,
            0, 0, 0, 2, 0, 50, 0, 49, 0, 0, 0, 2, 0, 51, 0, 52, 0, 0, 0, 10, 0,
            1, 0, 53, 0, 54, 0, 1, 0, 55, 0, 0, 0, 78, 0, 3, 0, 1, 0, 0, 0, 30,
            42, 183, 0, 1, 42, 9, 181, 0, 2, 42, 9, 181, 0, 3, 42, 4, 181, 0, 4,
            42, 4, 181, 0, 5, 42, 1, 181, 0, 6, 177, 0, 0, 0, 1, 0, 56, 0, 0, 0,
            30, 0, 7, 0, 0, 0, 11, 0, 4, 0, 5, 0, 9, 0, 6, 0, 14, 0, 7, 0, 19, 0,
            8, 0, 24, 0, 9, 0, 29, 0, 12, 0, 1, 0, 53, 0, 57, 0, 1, 0, 55, 0, 0,
            0, 96, 0, 3, 0, 4, 0, 0, 0, 40, 42, 183, 0, 1, 42, 9, 181, 0, 2, 42,
            9, 181, 0, 3, 42, 4, 181, 0, 4, 42, 4, 181, 0, 5, 42, 1, 181, 0, 6,
            42, 31, 181, 0, 2, 42, 45, 181, 0, 6, 177, 0, 0, 0, 1, 0, 56, 0, 0,
            0, 38, 0, 9, 0, 0, 0, 14, 0, 4, 0, 5, 0, 9, 0, 6, 0, 14, 0, 7, 0, 19,
            0, 8, 0, 24, 0, 9, 0, 29, 0, 15, 0, 34, 0, 16, 0, 39, 0, 17, 0, 1, 0,
            53, 0, 58, 0, 1, 0, 55, 0, 0, 0, 106, 0, 3, 0, 5, 0, 0, 0, 46, 42,
            183, 0, 1, 42, 9, 181, 0, 2, 42, 9, 181, 0, 3, 42, 4, 181, 0, 4, 42,
            4, 181, 0, 5, 42, 1, 181, 0, 6, 42, 31, 181, 0, 2, 42, 45, 181, 0, 6,
            42, 21, 4, 181, 0, 5, 177, 0, 0, 0, 1, 0, 56, 0, 0, 0, 42, 0, 10, 0,
            0, 0, 19, 0, 4, 0, 5, 0, 9, 0, 6, 0, 14, 0, 7, 0, 19, 0, 8, 0, 24, 0,
            9, 0, 29, 0, 20, 0, 34, 0, 21, 0, 39, 0, 22, 0, 45, 0, 23, 0, 33, 0,
            59, 0, 54, 0, 1, 0, 55, 0, 0, 0, 34, 0, 2, 0, 1, 0, 0, 0, 6, 42, 3,
            181, 0, 4, 177, 0, 0, 0, 1, 0, 56, 0, 0, 0, 10, 0, 2, 0, 0, 0, 26, 0,
            5, 0, 27, 0, 1, 0, 60, 0, 61, 0, 1, 0, 55, 0, 0, 0, 29, 0, 2, 0, 1,
            0, 0, 0, 5, 42, 180, 0, 2, 173, 0, 0, 0, 1, 0, 56, 0, 0, 0, 6, 0, 1,
            0, 0, 0, 30, 0, 33, 0, 62, 0, 54, 0, 1, 0, 55, 0, 0, 0, 66, 0, 7, 0,
            1, 0, 0, 0, 25, 42, 180, 0, 3, 9, 148, 153, 0, 18, 42, 42, 180, 0, 2,
            42, 180, 0, 3, 1, 1, 184, 0, 7, 87, 177, 0, 0, 0, 2, 0, 56, 0, 0, 0,
            14, 0, 3, 0, 0, 0, 34, 0, 9, 0, 35, 0, 24, 0, 37, 0, 63, 0, 0, 0, 3,
            0, 1, 24, 0, 2, 0, 64, 0, 65, 0, 1, 0, 55, 0, 0, 0, 37, 0, 3, 0, 2,
            0, 0, 0, 9, 16, 16, 7, 43, 184, 0, 8, 87, 177, 0, 0, 0, 1, 0, 56, 0,
            0, 0, 10, 0, 2, 0, 0, 0, 40, 0, 8, 0, 41, 0, 2, 0, 66, 0, 67, 0, 1,
            0, 55, 0, 0, 0, 51, 0, 4, 0, 2, 0, 0, 0, 27, 187, 0, 9, 89, 187, 0,
            10, 89, 183, 0, 11, 18, 12, 182, 0, 13, 43, 182, 0, 14, 182, 0, 15,
            183, 0, 16, 191, 0, 0, 0, 1, 0, 56, 0, 0, 0, 6, 0, 1, 0, 0, 0, 44, 0,
            1, 0, 68, 0, 69, 0, 1, 0, 55, 0, 0, 2, 70, 0, 7, 0, 6, 0, 0, 1, 30,
            184, 0, 17, 182, 0, 18, 199, 0, 16, 184, 0, 17, 42, 182, 0, 19, 182,
            0, 20, 182, 0, 21, 43, 77, 187, 0, 22, 89, 183, 0, 23, 78, 42, 187,
            0, 10, 89, 183, 0, 11, 18, 24, 182, 0, 13, 42, 180, 0, 2, 184, 0, 25,
            182, 0, 13, 18, 26, 182, 0, 13, 42, 180, 0, 6, 3, 47, 184, 0, 25,
            182, 0, 13, 182, 0, 15, 183, 0, 27, 42, 180, 0, 4, 153, 0, 203, 42,
            180, 0, 5, 154, 0, 23, 42, 42, 180, 0, 2, 42, 180, 0, 6, 3, 47, 45,
            44, 184, 0, 28, 87, 167, 0, 39, 42, 89, 58, 4, 194, 42, 42, 180, 0,
            2, 42, 180, 0, 6, 3, 47, 45, 44, 184, 0, 28, 87, 25, 4, 195, 167, 0,
            11, 58, 5, 25, 4, 195, 25, 5, 191, 45, 180, 0, 29, 4, 160, 0, 132,
            45, 180, 0, 30, 193, 0, 9, 153, 0, 11, 45, 180, 0, 30, 192, 0, 9,
            191, 1, 58, 4, 18, 9, 5, 189, 0, 31, 89, 3, 18, 32, 83, 89, 4, 18,
            33, 83, 182, 0, 34, 58, 4, 167, 0, 13, 58, 5, 42, 45, 180, 0, 30,
            183, 0, 35, 25, 4, 5, 189, 0, 36, 89, 3, 18, 37, 83, 89, 4, 45, 180,
            0, 30, 83, 182, 0, 38, 192, 0, 9, 191, 58, 5, 42, 45, 180, 0, 30,
            183, 0, 35, 167, 0, 39, 58, 5, 42, 45, 180, 0, 30, 183, 0, 35, 167,
            0, 26, 58, 5, 42, 45, 180, 0, 30, 183, 0, 35, 167, 0, 13, 58, 5, 42,
            45, 180, 0, 30, 183, 0, 35, 177, 0, 7, 0, 117, 0, 137, 0, 140, 0, 0,
            0, 140, 0, 145, 0, 140, 0, 0, 0, 177, 0, 198, 0, 201, 0, 33, 0, 211,
            0, 236, 0, 236, 0, 39, 0, 211, 0, 236, 0, 249, 0, 40, 0, 211, 0, 236,
            1, 6, 0, 41, 0, 211, 0, 236, 1, 19, 0, 42, 0, 2, 0, 56, 0, 0, 0, 130,
            0, 32, 0, 0, 0, 48, 0, 9, 0, 49, 0, 22, 0, 51, 0, 24, 0, 52, 0, 32,
            0, 54, 0, 78, 0, 55, 0, 85, 0, 57, 0, 92, 0, 58, 0, 112, 0, 61, 0,
            117, 0, 62, 0, 134, 0, 63, 0, 148, 0, 66, 0, 156, 0, 67, 0, 166, 0,
            68, 0, 174, 0, 70, 0, 177, 0, 72, 0, 198, 0, 76, 0, 201, 0, 74, 0,
            203, 0, 75, 0, 211, 0, 78, 0, 236, 0, 82, 0, 238, 0, 83, 0, 246, 0,
            93, 0, 249, 0, 85, 0, 251, 0, 86, 1, 3, 0, 93, 1, 6, 0, 88, 1, 8, 0,
            89, 1, 16, 0, 93, 1, 19, 0, 91, 1, 21, 0, 92, 1, 29, 0, 97, 0, 63, 0,
            0, 0, 86, 0, 12, 22, 253, 0, 89, 7, 0, 70, 7, 0, 71, 255, 0, 27, 0,
            5, 7, 0, 72, 7, 0, 73, 7, 0, 70, 7, 0, 71, 7, 0, 70, 0, 1, 7, 0, 74,
            250, 0, 7, 25, 255, 0, 26, 0, 5, 7, 0, 72, 7, 0, 73, 7, 0, 70, 7, 0,
            71, 7, 0, 75, 0, 1, 7, 0, 74, 9, 88, 7, 0, 76, 76, 7, 0, 77, 76, 7,
            0, 78, 76, 7, 0, 79, 250, 0, 9, 0, 1, 0, 80, 0, 69, 0, 1, 0, 55, 0,
            0, 2, 70, 0, 7, 0, 6, 0, 0, 1, 30, 184, 0, 17, 182, 0, 18, 199, 0,
            16, 184, 0, 17, 42, 182, 0, 19, 182, 0, 20, 182, 0, 21, 43, 77, 187,
            0, 22, 89, 183, 0, 23, 78, 42, 187, 0, 10, 89, 183, 0, 11, 18, 24,
            182, 0, 13, 42, 180, 0, 2, 184, 0, 25, 182, 0, 13, 18, 26, 182, 0,
            13, 42, 180, 0, 6, 4, 47, 184, 0, 25, 182, 0, 13, 182, 0, 15, 183, 0,
            27, 42, 180, 0, 4, 153, 0, 203, 42, 180, 0, 5, 154, 0, 23, 42, 42,
            180, 0, 2, 42, 180, 0, 6, 4, 47, 45, 44, 184, 0, 28, 87, 167, 0, 39,
            42, 89, 58, 4, 194, 42, 42, 180, 0, 2, 42, 180, 0, 6, 4, 47, 45, 44,
            184, 0, 28, 87, 25, 4, 195, 167, 0, 11, 58, 5, 25, 4, 195, 25, 5,
            191, 45, 180, 0, 29, 4, 160, 0, 132, 45, 180, 0, 30, 193, 0, 9, 153,
            0, 11, 45, 180, 0, 30, 192, 0, 9, 191, 1, 58, 4, 18, 9, 5, 189, 0,
            31, 89, 3, 18, 32, 83, 89, 4, 18, 33, 83, 182, 0, 34, 58, 4, 167, 0,
            13, 58, 5, 42, 45, 180, 0, 30, 183, 0, 35, 25, 4, 5, 189, 0, 36, 89,
            3, 18, 37, 83, 89, 4, 45, 180, 0, 30, 83, 182, 0, 38, 192, 0, 9, 191,
            58, 5, 42, 45, 180, 0, 30, 183, 0, 35, 167, 0, 39, 58, 5, 42, 45,
            180, 0, 30, 183, 0, 35, 167, 0, 26, 58, 5, 42, 45, 180, 0, 30, 183,
            0, 35, 167, 0, 13, 58, 5, 42, 45, 180, 0, 30, 183, 0, 35, 177, 0, 7,
            0, 117, 0, 137, 0, 140, 0, 0, 0, 140, 0, 145, 0, 140, 0, 0, 0, 177,
            0, 198, 0, 201, 0, 33, 0, 211, 0, 236, 0, 236, 0, 39, 0, 211, 0, 236,
            0, 249, 0, 40, 0, 211, 0, 236, 1, 6, 0, 41, 0, 211, 0, 236, 1, 19, 0,
            42, 0, 2, 0, 56, 0, 0, 0, 130, 0, 32, 0, 0, 0, 99, 0, 9, 0, 100, 0,
            22, 0, 102, 0, 24, 0, 103, 0, 32, 0, 105, 0, 78, 0, 106, 0, 85, 0,
            108, 0, 92, 0, 109, 0, 112, 0, 112, 0, 117, 0, 113, 0, 134, 0, 114,
            0, 148, 0, 117, 0, 156, 0, 118, 0, 166, 0, 119, 0, 174, 0, 121, 0,
            177, 0, 123, 0, 198, 0, 127, 0, 201, 0, 125, 0, 203, 0, 126, 0, 211,
            0, 129, 0, 236, 0, 133, 0, 238, 0, 134, 0, 246, 0, 144, 0, 249, 0,
            136, 0, 251, 0, 137, 1, 3, 0, 144, 1, 6, 0, 139, 1, 8, 0, 140, 1, 16,
            0, 144, 1, 19, 0, 142, 1, 21, 0, 143, 1, 29, 0, 148, 0, 63, 0, 0, 0,
            86, 0, 12, 22, 253, 0, 89, 7, 0, 70, 7, 0, 71, 255, 0, 27, 0, 5, 7,
            0, 72, 7, 0, 73, 7, 0, 70, 7, 0, 71, 7, 0, 70, 0, 1, 7, 0, 74, 250,
            0, 7, 25, 255, 0, 26, 0, 5, 7, 0, 72, 7, 0, 73, 7, 0, 70, 7, 0, 71,
            7, 0, 75, 0, 1, 7, 0, 74, 9, 88, 7, 0, 76, 76, 7, 0, 77, 76, 7, 0,
            78, 76, 7, 0, 79, 250, 0, 9, 0, 1, 0, 81, 0, 0, 0, 2, 0, 82
        };
    
        static ConnectionEventListenerCB()
        {
            _cmj_theClass = new global::Codemesh.JuggerNET.JavaClass("com/codemesh/nativeadapters/javax_sql_ConnectionEventListener", typeof(global::Javax.Sql.ConnectionEventListenerCB));
            _cmj_theClass.ByteCode = _cmj_byteCode;
            _cmj_ctor = new global::Codemesh.JuggerNET.JavaMethod(_cmj_theClass, null, "<init>", "(J[J)V", false);
        }
        
        public ConnectionEventListenerCB( global::Javax.Sql.ConnectionEventListener target )
        {
            theTarget = target;
            _cmj_cb0 = new  global::Codemesh.JuggerNET.GenericCallback( cb_ConnectionClosed0 );
            _cmj_cb1 = new  global::Codemesh.JuggerNET.GenericCallback( cb_ConnectionErrorOccurred1 );
            JObject = _cmj_ctor.construct(0, _cmj_cb0, _cmj_cb1);
        }
    
        public int cb_ConnectionClosed0( out int result_type, out global::Codemesh.JuggerNET.jvalue result, global::System.IntPtr param)
        {
            try
            {
                global::Javax.Sql.ConnectionEvent        a_xmog0 = (global::Javax.Sql.ConnectionEvent)global::Codemesh.JuggerNET.JavaClass.GetTypedInstance( typeof(global::Javax.Sql.ConnectionEvent), global::Codemesh.JuggerNET.jvalue.From( param ).l);
                theTarget.ConnectionClosed(a_xmog0);
                result = new global::Codemesh.JuggerNET.jvalue();
                result_type = 0;
    
            }
            catch (global::System.Exception exc)
            {
                result = global::Codemesh.JuggerNET.jvalue.CreateCBRetVal(exc);
                result_type = 1;
            }
            return 0;
        }
    
    
        public int cb_ConnectionErrorOccurred1( out int result_type, out global::Codemesh.JuggerNET.jvalue result, global::System.IntPtr param)
        {
            try
            {
                global::Javax.Sql.ConnectionEvent        a_xmog0 = (global::Javax.Sql.ConnectionEvent)global::Codemesh.JuggerNET.JavaClass.GetTypedInstance( typeof(global::Javax.Sql.ConnectionEvent), global::Codemesh.JuggerNET.jvalue.From( param ).l);
                theTarget.ConnectionErrorOccurred(a_xmog0);
                result = new global::Codemesh.JuggerNET.jvalue();
                result_type = 0;
    
            }
            catch (global::System.Exception exc)
            {
                result = global::Codemesh.JuggerNET.jvalue.CreateCBRetVal(exc);
                result_type = 1;
            }
            return 0;
        }
    }    
    

}
