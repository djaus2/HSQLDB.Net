<!--
     Copyright (c) 2009-2018 by Codemesh, Inc.
     ALL RIGHTS RESERVED.

     VERSION: 1.0.0

     PREREQUISITES: You will need

        - ANT 1.7.0 or later
        - Java 5 or higher

     INSTRUCTIONS: invoke with the code generator's lib directory
                   on the ANT search path, for example

        ant -lib "D:/Development/junc++ion-4.7.416/lib" build,run

        You can customized default properties using -D options. For
        example to build with the .NET 2.0 framework's C# compiler
        you might invoke the example with

        ant -lib /usr/vfour/lib -Dcompilers="{^dotnet(2).csc}" build,run

     PURPOSE:

        This file was generated by Codemesh's code generator to allow you
        to build proxy types into an assembly with one of a variety of
        supported C# compilers.

        You can override many default settings by providing commandline
        overrides.

   -->
<project name="jdbcr10" basedir="." default="all">

    <taskdef name="terp.echo" classname="com.codemesh.terp.ant.TerpEcho"/>
    <taskdef name="terp.exec" classname="com.codemesh.terp.ant.TerpExec"/>
    <taskdef name="terp.fail" classname="com.codemesh.terp.ant.Fail"/>
    <taskdef name="terp.foreach" classname="com.codemesh.terp.ant.Foreach"/>
    <taskdef name="terp.init" classname="com.codemesh.terp.ant.Initializer"/>
    <taskdef name="terp.property" classname="com.codemesh.terp.ant.TerpProperty"/>
    <taskdef name="terp.sequential" classname="com.codemesh.terp.ant.TerpSequential"/>

    <!-- initializes the terp framework so that extended property evaluation works as expected -->
    <terp.init/>

    <!-- override this variable if you don't want your build to fail if one sub-build fails -->
    <property name="failOnError" value="true" />

    <!-- override this variable to specify the exact compiler(s) you wish to use
         By default, we build with the latest compiler we can find.
      -->
    <property name="compilers" value="{ ^dotnet(4).csc, ^dotnet(3).csc, ^dotnet(2).csc }" />

    <!-- override this variable to specify the the nuget executable's location if it is not on the path -->
    <property name="nugetExe" value="nuget.exe" />

    <!-- override this variable if you want to use all configured compilers -->
    <property name="allCompilers" value="false" />

    <!-- override this variable to specify the exact platform(s) you wish to use
         By default, we build for the AnyCPU platform (platform-independent) only.
         Additional legal values include the strings 'x86', 'x64'.
      -->
    <property name="platforms" value="{ 'AnyCPU' }" />

    <!-- override this variable to specify the code generator's installation directory -->
    <property name="xmog.home" value="D:/Development/junc++ion-4.7.416" />

    <!-- override this variable to specify where the code generator's C++ runtime library files can be found -->
    <property name="cppDir" value="D:/Development/junc++ion-4.7.416/cpp/v3" />

    <!-- override this variable to specify where the code generator's .NET runtime assembly files can be found -->
    <property name="dotnetDir" value="D:/Development/junc++ion-4.7.416/dotnet/v3" />

    <!-- override this variable to specify a debug build -->
    <property name="debug" value="false" />

    <!-- override this variable to specify a private key file to be used for signing strongly named assemblies -->
    <property name="keyfile" value="" />

    <!-- override this variable to specify that you wish to reference the strongly named runtime library -->
    <property name="strong" value="false" />

    <!-- override this variable to specify the target base directory (will contain subdirectories) -->
    <property name="targetDir" value="${basedir}" />

    <!-- override this variable to specify the temporary directory -->
    <property name="tempDir" value="${basedir}" />

    <!-- the generated source files that are compiled into the project as a fileset.
         You can use this fileset if you want to write your own fileset-based build target.
      -->
    <fileset id="jdbcr10.sources" dir="${basedir}">
        <include name="InputStream.cs" />
        <include name="OutputStream.cs" />
        <include name="PrintStream.cs" />
        <include name="PrintWriter.cs" />
        <include name="Reader.cs" />
        <include name="Serializable.cs" />
        <include name="Writer.cs" />
        <include name="Annotation.cs" />
        <include name="AutoCloseable.cs" />
        <include name="Boolean.cs" />
        <include name="Byte.cs" />
        <include name="CharSequence.cs" />
        <include name="Character.cs" />
        <include name="Class.cs" />
        <include name="ClassLoader.cs" />
        <include name="ClassNotFoundException.cs" />
        <include name="Cloneable.cs" />
        <include name="Comparable.cs" />
        <include name="Double.cs" />
        <include name="Enum.cs" />
        <include name="Exception.cs" />
        <include name="Float.cs" />
        <include name="IllegalAccessException.cs" />
        <include name="InstantiationException.cs" />
        <include name="Integer.cs" />
        <include name="Iterable.cs" />
        <include name="Long.cs" />
        <include name="NoSuchFieldException.cs" />
        <include name="NoSuchMethodException.cs" />
        <include name="Number.cs" />
        <include name="NumberFormatException.cs" />
        <include name="Object.cs" />
        <include name="Package.cs" />
        <include name="AnnotatedElement.cs" />
        <include name="AnnotatedType.cs" />
        <include name="Constructor.cs" />
        <include name="Field.cs" />
        <include name="GenericDeclaration.cs" />
        <include name="Method.cs" />
        <include name="Type.cs" />
        <include name="TypeVariable.cs" />
        <include name="SecurityException.cs" />
        <include name="Short.cs" />
        <include name="String.cs" />
        <include name="Throwable.cs" />
        <include name="BigDecimal.cs" />
        <include name="URL.cs" />
        <include name="BasicPermission.cs" />
        <include name="Guard.cs" />
        <include name="Permission.cs" />
        <include name="ProtectionDomain.cs" />
        <include name="Array.cs" />
        <include name="BatchUpdateException.cs" />
        <include name="Blob.cs" />
        <include name="CallableStatement.cs" />
        <include name="ClientInfoStatus.cs" />
        <include name="Clob.cs" />
        <include name="Connection.cs" />
        <include name="DataTruncation.cs" />
        <include name="DatabaseMetaData.cs" />
        <include name="Date.cs" />
        <include name="Driver.cs" />
        <include name="DriverAction.cs" />
        <include name="DriverManager.cs" />
        <include name="DriverPropertyInfo.cs" />
        <include name="JDBCType.cs" />
        <include name="NClob.cs" />
        <include name="ParameterMetaData.cs" />
        <include name="PreparedStatement.cs" />
        <include name="PseudoColumnUsage.cs" />
        <include name="Ref.cs" />
        <include name="ResultSet.cs" />
        <include name="ResultSetMetaData.cs" />
        <include name="RowId.cs" />
        <include name="RowIdLifetime.cs" />
        <include name="SQLClientInfoException.cs" />
        <include name="SQLData.cs" />
        <include name="SQLDataException.cs" />
        <include name="SQLException.cs" />
        <include name="SQLFeatureNotSupportedException.cs" />
        <include name="SQLInput.cs" />
        <include name="SQLIntegrityConstraintViolationException.cs" />
        <include name="SQLInvalidAuthorizationSpecException.cs" />
        <include name="SQLNonTransientConnectionException.cs" />
        <include name="SQLNonTransientException.cs" />
        <include name="SQLOutput.cs" />
        <include name="SQLPermission.cs" />
        <include name="SQLRecoverableException.cs" />
        <include name="SQLSyntaxErrorException.cs" />
        <include name="SQLTimeoutException.cs" />
        <include name="SQLTransactionRollbackException.cs" />
        <include name="SQLTransientConnectionException.cs" />
        <include name="SQLTransientException.cs" />
        <include name="SQLType.cs" />
        <include name="SQLWarning.cs" />
        <include name="SQLXML.cs" />
        <include name="Savepoint.cs" />
        <include name="Statement.cs" />
        <include name="Struct.cs" />
        <include name="Time.cs" />
        <include name="Timestamp.cs" />
        <include name="Types.cs" />
        <include name="Wrapper.cs" />
        <include name="Instant.cs" />
        <include name="LocalDate.cs" />
        <include name="LocalDateTime.cs" />
        <include name="LocalTime.cs" />
        <include name="AbstractCollection.cs" />
        <include name="AbstractList.cs" />
        <include name="Calendar.cs" />
        <include name="Collection.cs" />
        <include name="Comparator.cs" />
        <include name="Executor.cs" />
        <include name="Date1.cs" />
        <include name="Enumeration.cs" />
        <include name="EventListener.cs" />
        <include name="EventObject.cs" />
        <include name="Consumer.cs" />
        <include name="Predicate.cs" />
        <include name="UnaryOperator.cs" />
        <include name="Hashtable.cs" />
        <include name="Iterator.cs" />
        <include name="List.cs" />
        <include name="ListIterator.cs" />
        <include name="Logger.cs" />
        <include name="Map.cs" />
        <include name="Properties.cs" />
        <include name="RandomAccess.cs" />
        <include name="Spliterator.cs" />
        <include name="Vector.cs" />
        <include name="Binding.cs" />
        <include name="Context.cs" />
        <include name="InitialContext.cs" />
        <include name="Name.cs" />
        <include name="NameClassPair.cs" />
        <include name="NameParser.cs" />
        <include name="NamingEnumeration.cs" />
        <include name="NamingException.cs" />
        <include name="CommonDataSource.cs" />
        <include name="ConnectionEvent.cs" />
        <include name="ConnectionEventListener.cs" />
        <include name="ConnectionPoolDataSource.cs" />
        <include name="DataSource.cs" />
        <include name="PooledConnection.cs" />
        <include name="RowSet.cs" />
        <include name="RowSetEvent.cs" />
        <include name="RowSetInternal.cs" />
        <include name="RowSetListener.cs" />
        <include name="RowSetMetaData.cs" />
        <include name="RowSetReader.cs" />
        <include name="RowSetWriter.cs" />
        <include name="StatementEvent.cs" />
        <include name="StatementEventListener.cs" />
        <include name="XAConnection.cs" />
        <include name="XADataSource.cs" />
        <include name="XAResource.cs" />
        <include name="Result.cs" />
        <include name="Source.cs" />
        <include name="Properties/AssemblyInfo.cs" />
    </fileset>

    <!-- the external source files that are added to the project.
         These files are copied to the 'AddedSources' subdirectory of the generated sources directory.
         All files in that directory will be compiled into the assembly.

         Please note that you can copy additional sources into this directory yourself
         and those files will be picked up as well.  ANY files in that well-defined location
         will be added to the build.
      -->
    <fileset id="jdbcr10.addedsources" dir="${basedir}" excludes="**">
    </fileset>

    <!--  ====================================================================
          Displays info and builds the project
      -->
    <target     name="all"
                description="Builds the jdbcr10 project"
                depends="info, build, nuget"
    >
    </target>

    <!--  ====================================================================
          Builds the project
      -->
    <target     name="build"
                description="Builds the jdbcr10 project"
    >
        <!-- iterate over all configured compilers -->
        <terp.foreach name="comp" expression="${compilers}">

            <!-- try the next configured compiler if we can't resolve it -->
            <continue if="comp==null" />

            <!-- iterate over all platforms for which we're building -->
            <terp.foreach   name="platform" expression="${platforms}">

                <terp.echo  level="info"
                            message="Building with ${comp} for ${platform}"
                />

                <!-- we build into name-mangled directories to support building with
                     multiple compilers, but you could simplify this to a simple, hardcoded
                     directory name if you're only building with one known compiler
                  -->
                <terp.property name="dir" value="${^f(targetDir).canonicalpath.replace('\\','/')}/${switch(^str(platform)[lower])}${case('anycpu')}bin${case('x86')}bin/x86${case('x64')}bin/x64${endswitch}${^bool(debug)?'/Debug':'/Release'}" />

                <!-- we link with a specific version of the runtime library
                  -->
                <terp.property name="netrt" value="${^file(xmog.home).canonicalpath.replace('\\','/')}/dotnet/v3/${switch(^str(platform)[lower])}${case('anycpu')}bin${case('x86')}bin/x86${case('x64')}bin/x64${endswitch}/netrt${^bool(strong)?'sn':''}.dll" />

                <!-- create the target directory if necessary -->
                <mkdir  dir="${dir}" />

                <!-- generate a response file that contains all the commandline options needed to
                     build that target
                  -->
                <echo file="${tempDir}/jdbcr10.${platform}.rsp">/target:library
/nowarn:28;1607
/out:${dir}/jdbcr10.dll
/platform:${platform}
/debug${^bool(debug)?'+':'-'}
${^bool(debug)?'/debug:pdbonly'+eol:''
}/optimize${^bool(debug)?'-':'+'}
${^bool(strong)?(keyfile!=''?'/keyfile:'+keyfile : '/delaysign+')+eol : ''
}/reference:${netrt}
/recurse:AddedSources\*.cs
InputStream.cs
OutputStream.cs
PrintStream.cs
PrintWriter.cs
Reader.cs
Serializable.cs
Writer.cs
Annotation.cs
AutoCloseable.cs
Boolean.cs
Byte.cs
CharSequence.cs
Character.cs
Class.cs
ClassLoader.cs
ClassNotFoundException.cs
Cloneable.cs
Comparable.cs
Double.cs
Enum.cs
Exception.cs
Float.cs
IllegalAccessException.cs
InstantiationException.cs
Integer.cs
Iterable.cs
Long.cs
NoSuchFieldException.cs
NoSuchMethodException.cs
Number.cs
NumberFormatException.cs
Object.cs
Package.cs
AnnotatedElement.cs
AnnotatedType.cs
Constructor.cs
Field.cs
GenericDeclaration.cs
Method.cs
Type.cs
TypeVariable.cs
SecurityException.cs
Short.cs
String.cs
Throwable.cs
BigDecimal.cs
URL.cs
BasicPermission.cs
Guard.cs
Permission.cs
ProtectionDomain.cs
Array.cs
BatchUpdateException.cs
Blob.cs
CallableStatement.cs
ClientInfoStatus.cs
Clob.cs
Connection.cs
DataTruncation.cs
DatabaseMetaData.cs
Date.cs
Driver.cs
DriverAction.cs
DriverManager.cs
DriverPropertyInfo.cs
JDBCType.cs
NClob.cs
ParameterMetaData.cs
PreparedStatement.cs
PseudoColumnUsage.cs
Ref.cs
ResultSet.cs
ResultSetMetaData.cs
RowId.cs
RowIdLifetime.cs
SQLClientInfoException.cs
SQLData.cs
SQLDataException.cs
SQLException.cs
SQLFeatureNotSupportedException.cs
SQLInput.cs
SQLIntegrityConstraintViolationException.cs
SQLInvalidAuthorizationSpecException.cs
SQLNonTransientConnectionException.cs
SQLNonTransientException.cs
SQLOutput.cs
SQLPermission.cs
SQLRecoverableException.cs
SQLSyntaxErrorException.cs
SQLTimeoutException.cs
SQLTransactionRollbackException.cs
SQLTransientConnectionException.cs
SQLTransientException.cs
SQLType.cs
SQLWarning.cs
SQLXML.cs
Savepoint.cs
Statement.cs
Struct.cs
Time.cs
Timestamp.cs
Types.cs
Wrapper.cs
Instant.cs
LocalDate.cs
LocalDateTime.cs
LocalTime.cs
AbstractCollection.cs
AbstractList.cs
Calendar.cs
Collection.cs
Comparator.cs
Executor.cs
Date1.cs
Enumeration.cs
EventListener.cs
EventObject.cs
Consumer.cs
Predicate.cs
UnaryOperator.cs
Hashtable.cs
Iterator.cs
List.cs
ListIterator.cs
Logger.cs
Map.cs
Properties.cs
RandomAccess.cs
Spliterator.cs
Vector.cs
Binding.cs
Context.cs
InitialContext.cs
Name.cs
NameClassPair.cs
NameParser.cs
NamingEnumeration.cs
NamingException.cs
CommonDataSource.cs
ConnectionEvent.cs
ConnectionEventListener.cs
ConnectionPoolDataSource.cs
DataSource.cs
PooledConnection.cs
RowSet.cs
RowSetEvent.cs
RowSetInternal.cs
RowSetListener.cs
RowSetMetaData.cs
RowSetReader.cs
RowSetWriter.cs
StatementEvent.cs
StatementEventListener.cs
XAConnection.cs
XADataSource.cs
XAResource.cs
Result.cs
Source.cs
Properties\AssemblyInfo.cs

</echo>

                <!-- copy the added sources if necessary -->
                <mkdir      dir="AddedSources" />
                <copy       todir="AddedSources">
                    <fileset refid="jdbcr10.addedsources" />
                </copy>

                <!-- copy the runtime library -->
                <copy file="${netrt}" todir="${dir}" />

                <terp.exec  expression="^exec({executable:comp.executable, workingdir:@'${tempDir[replace('\\','/')]}'})( '@' + @'${tempDir[replace('\\','/')]}/jdbcr10.${platform}.rsp')"
                            result="jdbcr10_result"
                            failonerror="false"
                />
                <terp.echo>${jdbcr10_result}</terp.echo>
                <terp.fail if="failOnError &amp;&amp; jdbcr10_result.exitcode != 0" />

				<!-- stage the native, unmanaged library that is required at runtime
				  -->
                <terp.sequential if="platform=='x86' || platform=='X86'">
                    <copy file="${cppDir}/lib/windows/x86/msvc-16.00/release/xmogrt.dll" todir="${dir}" overwrite="false" />
                </terp.sequential>

                <terp.sequential if="platform=='x64' || platform=='X64'">
                    <copy file="${cppDir}/lib/windows/amd64/msvc-16.00/release/xmogrt.dll" todir="${dir}" overwrite="false" />
                </terp.sequential>

            </terp.foreach>

            <break if="!^bool(allCompilers)" />

        </terp.foreach>
    </target>

    <!--  ====================================================================
          Cleans the project
      -->
    <target     name="clean"
                description="Cleans the jdbcr10 project"
    >
        <!-- iterate over all configured compilers -->
        <terp.foreach name="comp" expression="${compilers}">

            <!-- try the next configured compiler if we can't resolve it -->
            <continue if="comp==null" />

            <!-- iterate over all platforms for which we're building -->
            <terp.foreach   name="platform" expression="${platforms}">

                <terp.echo  level="info"
                            message="Cleaning for ${comp} - ${platform}"
                />

                <!-- we built into name-mangled directories to support building with
                     multiple compilers, so the file to be deleted will be there as
                     well
                  -->
                <terp.property name="dir" value="${^f(targetDir).canonicalpath.replace('\\','/')}/${switch(^str(platform)[lower])}${case('anycpu')}bin${case('x86')}bin/x86${case('x64')}bin/x64${endswitch}${^bool(debug)?'/Debug':'/Release'}" />

                <!-- delete built file and generated response file
                  -->
                <delete file="${dir}/jdbcr10.dll" />
                <delete file="${tempDir}/jdbcr10.${platform}.rsp" />

            </terp.foreach>

            <break if="!^bool(allCompilers)" />

        </terp.foreach>
    </target>


    <!--  ====================================================================
          Provides information about the project's configuration
      -->
    <target     name="info"
                description="Provide information about the project's configuration"
    >
        <terp.echo>
*********************************************************

Target Directory              : ${targetDir}
Temp.  Directory              : ${tempDir}
Processor Architecture(s)     : ${os.procarchs[^xform(this.family)][join(', ')]}
Configured Platform(s)        : ${platforms}
Configured .NET Compiler(s)   : ${compilers}
${eval(compilers)[join(','+eol)][join(eol)] #indent=32}

*********************************************************
        </terp.echo>
    </target>
    
    
    <!--  ====================================================================
          Build a NuGet package from the generated assembly and package specification
      -->
    <target     name="nuget"
                description="Build a NuGet package from the generated assembly and package specification"
    >
        <exec   executable="${nugetExe}" dir="${basedir}">
            <arg value="Pack" />
            <arg value="jdbcr10.nuspec" />
        </exec>
    </target>


</project>
